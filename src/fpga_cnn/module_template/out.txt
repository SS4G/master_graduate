wire [WIDTH:0] tmp_w_0_0;
wire [WIDTH:0] tmp_w_0_10;
wire [WIDTH:0] tmp_w_0_11;
wire [WIDTH:0] tmp_w_0_12;
wire [WIDTH:0] tmp_w_0_13;
wire [WIDTH:0] tmp_w_0_14;
wire [WIDTH:0] tmp_w_0_15;
wire [WIDTH:0] tmp_w_0_16;
wire [WIDTH:0] tmp_w_0_17;
wire [WIDTH:0] tmp_w_0_18;
wire [WIDTH:0] tmp_w_0_19;
wire [WIDTH:0] tmp_w_0_1;
wire [WIDTH:0] tmp_w_0_20;
wire [WIDTH:0] tmp_w_0_21;
wire [WIDTH:0] tmp_w_0_22;
wire [WIDTH:0] tmp_w_0_23;
wire [WIDTH:0] tmp_w_0_24;
wire [WIDTH:0] tmp_w_0_25;
wire [WIDTH:0] tmp_w_0_2;
wire [WIDTH:0] tmp_w_0_3;
wire [WIDTH:0] tmp_w_0_4;
wire [WIDTH:0] tmp_w_0_5;
wire [WIDTH:0] tmp_w_0_6;
wire [WIDTH:0] tmp_w_0_7;
wire [WIDTH:0] tmp_w_0_8;
wire [WIDTH:0] tmp_w_0_9;
wire [WIDTH:0] tmp_w_1_0;
wire [WIDTH:0] tmp_w_1_10;
wire [WIDTH:0] tmp_w_1_11;
wire [WIDTH:0] tmp_w_1_12;
wire [WIDTH:0] tmp_w_1_1;
wire [WIDTH:0] tmp_w_1_2;
wire [WIDTH:0] tmp_w_1_3;
wire [WIDTH:0] tmp_w_1_4;
wire [WIDTH:0] tmp_w_1_5;
wire [WIDTH:0] tmp_w_1_6;
wire [WIDTH:0] tmp_w_1_7;
wire [WIDTH:0] tmp_w_1_8;
wire [WIDTH:0] tmp_w_1_9;
wire [WIDTH:0] tmp_w_2_0;
wire [WIDTH:0] tmp_w_2_1;
wire [WIDTH:0] tmp_w_2_2;
wire [WIDTH:0] tmp_w_2_3;
wire [WIDTH:0] tmp_w_2_4;
wire [WIDTH:0] tmp_w_2_5;
wire [WIDTH:0] tmp_w_2_6;
wire [WIDTH:0] tmp_w_3_0;
wire [WIDTH:0] tmp_w_3_1;
wire [WIDTH:0] tmp_w_3_2;
wire [WIDTH:0] tmp_w_3_3;
wire [WIDTH:0] tmp_w_4_0;
wire [WIDTH:0] tmp_w_4_1;
wire [WIDTH:0] tmp_w_5_0;




assign tmp_w_0_00 = 00;
assign tmp_w_0_01 = 01;
assign tmp_w_0_02 = 02;
assign tmp_w_0_03 = 03;
assign tmp_w_0_04 = 04;
assign tmp_w_0_05 = 05;
assign tmp_w_0_06 = 06;
assign tmp_w_0_07 = 07;
assign tmp_w_0_08 = 08;
assign tmp_w_0_09 = 09;
assign tmp_w_0_10 = 10;
assign tmp_w_0_11 = 11;
assign tmp_w_0_12 = 12;
assign tmp_w_0_13 = 13;
assign tmp_w_0_14 = 14;
assign tmp_w_0_15 = 15;
assign tmp_w_0_16 = 16;
assign tmp_w_0_17 = 17;
assign tmp_w_0_18 = 18;
assign tmp_w_0_19 = 19;
assign tmp_w_0_20 = 20;
assign tmp_w_0_21 = 21;
assign tmp_w_0_22 = 22;
assign tmp_w_0_23 = 23;
assign tmp_w_0_24 = 24;
assign tmp_w_0_25 = 25;

    FixAdd #(.WIDTH(WIDTH)) fix_add_inst_1_0(
        .rst_n(rst_n),
        .clk(clk),
    	.inA(tmp_out_0_0),
    	.inB(tmp_out_0_1),
    	.outSum(tmp_out_1_0)
    );
    

    FixAdd #(.WIDTH(WIDTH)) fix_add_inst_1_1(
        .rst_n(rst_n),
        .clk(clk),
    	.inA(tmp_out_0_2),
    	.inB(tmp_out_0_3),
    	.outSum(tmp_out_1_1)
    );
    

    FixAdd #(.WIDTH(WIDTH)) fix_add_inst_1_2(
        .rst_n(rst_n),
        .clk(clk),
    	.inA(tmp_out_0_4),
    	.inB(tmp_out_0_5),
    	.outSum(tmp_out_1_2)
    );
    

    FixAdd #(.WIDTH(WIDTH)) fix_add_inst_1_3(
        .rst_n(rst_n),
        .clk(clk),
    	.inA(tmp_out_0_6),
    	.inB(tmp_out_0_7),
    	.outSum(tmp_out_1_3)
    );
    

    FixAdd #(.WIDTH(WIDTH)) fix_add_inst_1_4(
        .rst_n(rst_n),
        .clk(clk),
    	.inA(tmp_out_0_8),
    	.inB(tmp_out_0_9),
    	.outSum(tmp_out_1_4)
    );
    

    FixAdd #(.WIDTH(WIDTH)) fix_add_inst_1_5(
        .rst_n(rst_n),
        .clk(clk),
    	.inA(tmp_out_0_10),
    	.inB(tmp_out_0_11),
    	.outSum(tmp_out_1_5)
    );
    

    FixAdd #(.WIDTH(WIDTH)) fix_add_inst_1_6(
        .rst_n(rst_n),
        .clk(clk),
    	.inA(tmp_out_0_12),
    	.inB(tmp_out_0_13),
    	.outSum(tmp_out_1_6)
    );
    

    FixAdd #(.WIDTH(WIDTH)) fix_add_inst_1_7(
        .rst_n(rst_n),
        .clk(clk),
    	.inA(tmp_out_0_14),
    	.inB(tmp_out_0_15),
    	.outSum(tmp_out_1_7)
    );
    

    FixAdd #(.WIDTH(WIDTH)) fix_add_inst_1_8(
        .rst_n(rst_n),
        .clk(clk),
    	.inA(tmp_out_0_16),
    	.inB(tmp_out_0_17),
    	.outSum(tmp_out_1_8)
    );
    

    FixAdd #(.WIDTH(WIDTH)) fix_add_inst_1_9(
        .rst_n(rst_n),
        .clk(clk),
    	.inA(tmp_out_0_18),
    	.inB(tmp_out_0_19),
    	.outSum(tmp_out_1_9)
    );
    

    FixAdd #(.WIDTH(WIDTH)) fix_add_inst_1_10(
        .rst_n(rst_n),
        .clk(clk),
    	.inA(tmp_out_0_20),
    	.inB(tmp_out_0_21),
    	.outSum(tmp_out_1_10)
    );
    

    FixAdd #(.WIDTH(WIDTH)) fix_add_inst_1_11(
        .rst_n(rst_n),
        .clk(clk),
    	.inA(tmp_out_0_22),
    	.inB(tmp_out_0_23),
    	.outSum(tmp_out_1_11)
    );
    

    FixAdd #(.WIDTH(WIDTH)) fix_add_inst_1_12(
        .rst_n(rst_n),
        .clk(clk),
    	.inA(tmp_out_0_24),
    	.inB(tmp_out_0_25),
    	.outSum(tmp_out_1_12)
    );
    

    FixAdd #(.WIDTH(WIDTH)) fix_add_inst_2_0(
        .rst_n(rst_n),
        .clk(clk),
    	.inA(tmp_out_1_0),
    	.inB(tmp_out_1_1),
    	.outSum(tmp_out_2_0)
    );
    

    FixAdd #(.WIDTH(WIDTH)) fix_add_inst_2_1(
        .rst_n(rst_n),
        .clk(clk),
    	.inA(tmp_out_1_2),
    	.inB(tmp_out_1_3),
    	.outSum(tmp_out_2_1)
    );
    

    FixAdd #(.WIDTH(WIDTH)) fix_add_inst_2_2(
        .rst_n(rst_n),
        .clk(clk),
    	.inA(tmp_out_1_4),
    	.inB(tmp_out_1_5),
    	.outSum(tmp_out_2_2)
    );
    

    FixAdd #(.WIDTH(WIDTH)) fix_add_inst_2_3(
        .rst_n(rst_n),
        .clk(clk),
    	.inA(tmp_out_1_6),
    	.inB(tmp_out_1_7),
    	.outSum(tmp_out_2_3)
    );
    

    FixAdd #(.WIDTH(WIDTH)) fix_add_inst_2_4(
        .rst_n(rst_n),
        .clk(clk),
    	.inA(tmp_out_1_8),
    	.inB(tmp_out_1_9),
    	.outSum(tmp_out_2_4)
    );
    

    FixAdd #(.WIDTH(WIDTH)) fix_add_inst_2_5(
        .rst_n(rst_n),
        .clk(clk),
    	.inA(tmp_out_1_10),
    	.inB(tmp_out_1_11),
    	.outSum(tmp_out_2_5)
    );
    

    FixAdd #(.WIDTH(WIDTH)) fix_add_inst_2_6(
        .rst_n(rst_n),
        .clk(clk),
    	.inA(tmp_out_1_12),
    	.inB(tmp_out_0),
    	.outSum(tmp_out_2_6)
    );
    

    FixAdd #(.WIDTH(WIDTH)) fix_add_inst_3_0(
        .rst_n(rst_n),
        .clk(clk),
    	.inA(tmp_out_2_0),
    	.inB(tmp_out_2_1),
    	.outSum(tmp_out_3_0)
    );
    

    FixAdd #(.WIDTH(WIDTH)) fix_add_inst_3_1(
        .rst_n(rst_n),
        .clk(clk),
    	.inA(tmp_out_2_2),
    	.inB(tmp_out_2_3),
    	.outSum(tmp_out_3_1)
    );
    

    FixAdd #(.WIDTH(WIDTH)) fix_add_inst_3_2(
        .rst_n(rst_n),
        .clk(clk),
    	.inA(tmp_out_2_4),
    	.inB(tmp_out_2_5),
    	.outSum(tmp_out_3_2)
    );
    

    FixAdd #(.WIDTH(WIDTH)) fix_add_inst_3_3(
        .rst_n(rst_n),
        .clk(clk),
    	.inA(tmp_out_2_6),
    	.inB(tmp_out_0),
    	.outSum(tmp_out_3_3)
    );
    

    FixAdd #(.WIDTH(WIDTH)) fix_add_inst_4_0(
        .rst_n(rst_n),
        .clk(clk),
    	.inA(tmp_out_3_0),
    	.inB(tmp_out_3_1),
    	.outSum(tmp_out_4_0)
    );
    

    FixAdd #(.WIDTH(WIDTH)) fix_add_inst_4_1(
        .rst_n(rst_n),
        .clk(clk),
    	.inA(tmp_out_3_2),
    	.inB(tmp_out_3_3),
    	.outSum(tmp_out_4_1)
    );
    

    FixAdd #(.WIDTH(WIDTH)) fix_add_inst_5_0(
        .rst_n(rst_n),
        .clk(clk),
    	.inA(tmp_out_4_0),
    	.inB(tmp_out_4_1),
    	.outSum(tmp_out_5_0)
    );
    
